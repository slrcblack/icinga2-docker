template Service "Service_Template" {
    max_check_attempts = "3"
    check_period = "24x7"
    check_interval = 2m
    retry_interval = 30s
    enable_notifications = true
    enable_active_checks = true
    enable_passive_checks = true
    enable_event_handler = true
    enable_perfdata = true
}

template Service "check_NRPE" {
    import "Service_Template"

    check_command = "check_nrpe"
    check_interval = 2m
}

template Service "check_NRPE_disk" {
    import "Service_Template"

    check_command = "check_nrpe"
    vars.nrpe_arg = "-w 10% -c 15%"
    vars.nrpe_check = "check2_arg_disk_all"
}

template Service "check_NRPE_load" {
    import "Service_Template"

    check_command = "check_nrpe"
    vars.nrpe_arg = "check_load -w 8,8,7 -c 10,8,7"
    vars.nrpe_check = "check2_nrpe"
}

template Service "check_icinga_cluster_zone" {
    import "Service_Template"

    check_command = "cluster-zone"
    check_interval = 30s
    vars.cluster_zone = "master"
}

template Service "PING" {
    import "Service_Template_5min"

    check_command = "check_icmp"
    vars.address = "$host.address$"
    vars.critval = "1000.0,60%"
    vars.numtriesval = "5"
    vars.packetval = "5"
    vars.warnval = "500.0,30%"
}

template Service "Service_Template_5min" {
    max_check_attempts = "3"
    check_period = "24x7"
    check_interval = 3m
    retry_interval = 1m
    enable_notifications = true
    enable_active_checks = true
    enable_passive_checks = true
    enable_event_handler = true
    enable_perfdata = true
}

template Service "check-host-alive" {
    import "Service_Template"

    check_command = "check_icmp"
    vars.critval = "5000.0,100%"
    vars.numtriesval = "1"
    vars.warnval = "5000.0,100%"
}

template Service "Service_Template_15min" {
    max_check_attempts = "3"
    check_period = "24x7"
    check_interval = 15m
    retry_interval = 5m
    enable_notifications = true
    enable_active_checks = true
    enable_passive_checks = true
    enable_event_handler = true
    enable_perfdata = true
}

template Service "5 MIN CPU UTIL" {
    import "Service_Template_15min"

    check_command = "check_cisco_cpu_5"
    vars.address = "$host.address$"
    vars.community = "$snmp_read$"
    vars.critval = "91"
    vars.packetval = "5"
    vars.period = "5"
    vars.retries = "3"
    vars.timeout = "5"
    vars.warnval = "80"
}

template Service "MULTI-CIRCUIT" {
    import "Service_Template_15min"

    check_command = "check_multi_egress"
    notes_url = "http://wiki.ena.com/display/engineering/Multi-Egress+Customers"
    vars.address = "$host.address$"
    vars.community = "$snmp_read$"
    vars.critval = "91"
    vars.packetval = "5"
    vars.period = "5"
    vars.retries = "3"
    vars.timeout = "5"
    vars.warnval = "80"
}

template Service "check_NRPE_dummy_test" {
    import "Service_Template"

    check_command = "check_nrpe"
    max_check_attempts = "2"
    check_interval = 10s
    retry_interval = 10s
    vars.nrpe_arg = "check_dummy2.sh"
    vars.nrpe_check = "check2_nrpe"
}

template Service "check_NRPE_proc_npcd" {
    import "Service_Template"

    check_command = "check_nrpe"
    vars.nrpe_arg = "check_procs -c 1:2 -C npcd -u icinga"
    vars.nrpe_check = "check2_nrpe"
}

template Service "SYMMETRY" {
    import "Service_Template_5min"

    check_command = "check_tcp"
    vars.address = "$host.address$"
    vars.check_port = "23"
    vars.critval = "1000.0,60%"
    vars.numtriesval = "10"
    vars.packetval = "5"
    vars.timeout = "2"
    vars.warnval = "500.0,30%"
}

template Service "MULTI-EGRESS" {
    import "Service_Template_5min"

    check_command = "check_bgp_status"
    notes_url = "http://wiki.ena.com/display/engineering/Multi-Egress+Customers"
}

template Service "BACKBONE" {
    import "Service_Template"

    check_command = "check_icmp2"
    vars.critval = "1000.0,60%"
    vars.numtriesval = "10"
    vars.warnval = "500.0,30%"
}

template Service "1 MIN CPU UTIL" {
    import "Service_Template_15min"

    check_command = "check_cisco_cpu_5"
    vars.address = "$host.address$"
    vars.community = "$snmp_read$"
    vars.critval = "91"
    vars.otherargs = "-A"
    vars.packetval = "5"
    vars.period = "1"
    vars.retries = "0"
    vars.timeout = "2"
    vars.warnval = "80"
}

template Service "check_NRPE_Legacy" {
    import "Service_Template"

    check_command = "Legacy_check_nrpe"
    check_interval = 2m
    vars.address = "$host.address$"
    vars.nrpe_port = "5666"
    vars.nrpe_timeout = "30"
}

template Service "check_NRPE_Legacy_arg_procs_state" {
    import "Service_Template"

    check_command = "Legacy_check_nrpe_arg_procs_state"
    check_interval = 2m
    vars.address = "$host.address$"
    vars.nrpe_port = "5666"
    vars.nrpe_timeout = "30"
}

template Service "DNS LOOKUP" {
    import "Service_Template_5min"

    check_command = "DNS LOOKUP"
    vars.address = "$host.address$"
    vars.arg1 = "1.2.3.4"
    vars.dnslookup = "nstest.ena.net"
}

template Service "Service_Template_1min" {
    max_check_attempts = "3"
    check_period = "24x7"
    check_interval = 1m
    retry_interval = 1m
    enable_notifications = true
    enable_active_checks = true
    enable_passive_checks = true
    enable_event_handler = true
    enable_perfdata = true
}

template Service "PING_IP" {
    import "Service_Template_5min"

    check_command = "check_icmp2"
    vars.address = "$host.address$"
    vars.critval = "1000.0,60%"
    vars.ipaddr = "$host.address$"
    vars.numtriesval = "5"
    vars.packetval = "5"
    vars.warnval = "500.0,30%"
}

template Service "PING_1M" {
    import "Service_Template_1min"

    check_command = "check_icmp"
    vars.address = "$host.address$"
    vars.critval = "1000.0,60%"
    vars.numtriesval = "5"
    vars.packetval = "5"
    vars.warnval = "500.0,30%"
}

template Service "PING_VAR_1M" {
    import "Service_Template_1min"

    check_command = "check_icmp2"
    vars.address = "$host.address$"
    vars.critval = "1000.0,60%"
    vars.ipaddr = "$host.address$"
    vars.numtriesval = "5"
    vars.packetval = "5"
    vars.warnval = "500.0,30%"
}

template Service "check_cisco_uptime" {
    import "5 MIN CPU UTIL"

    check_command = "check_cisco_uptime"
    max_check_attempts = "3"
    check_period = "24x7"
    check_interval = 5m
    retry_interval = 2m
    enable_notifications = true
    enable_active_checks = true
    enable_passive_checks = true
    enable_event_handler = true
    enable_perfdata = true
    volatile = false
    vars.community = "z5tGreZ9"
    vars.label = "Uptime"
    vars.oid = "1.3.6.1.2.1.1.3.0"
    vars.retries = "2"
    vars.snmpversion = "2c"
    vars.units = "Timeticks"
    vars.warnval = "36000:"
}

template Service "check_http" {
    import "Service_Template_5min"

    check_command = "check_http"
    max_check_attempts = "2"
    check_interval = 3m
    vars.address = "$host.address$"
}

template Service "check_http_content_string" {
    import "Service_Template_5min"

    check_command = "check_http_content_string"
    max_check_attempts = "2"
    check_interval = 3m
    retry_interval = 1m
    vars.address = "$host.address$"
    vars.follow = "follow"
    vars.httpstring = "Blocked"
    vars.timeout = "20"
    vars.url = "/"
}

template Service "check_https_content_string" {
    import "Service_Template_5min"

    check_command = "check_http_content_string"
    max_check_attempts = "2"
    check_interval = 3m
    retry_interval = 1m
    vars.address = "$host.address$"
    vars.follow = "follow"
    vars.httpstring = "Blocked"
    vars.timeout = "20"
    vars.url = "/"
}

template Service "check_nrpe_legacy_args" {
    import "Service_Template_5min"

    check_command = "Legacy_check_nrpe_args"
    vars.address = "$host.address$"
    vars.nrpe_port = "5666"
    vars.timeout = "30"
}

template Service "check_ssh" {
    import "Service_Template_5min"

    check_command = "check_ssh"
}

template Service "check_ntp_peer" {
    import "Service_Template_5min"

    check_command = "check_ntp_peer"
    vars.address = "$host.address$"
}

template Service "check_NRPE_proc" {
    import "Service_Template"

    check_command = "check_nrpe"
    vars.nrpe_arg = "check_procs -c 1:2 -C npcd -u icinga"
    vars.nrpe_check = "check2_nrpe"
}

template Service "check_NRPE_mysql" {
    import "Service_Template"

    check_command = "check_nrpe_mysql"
    check_interval = 2m
}

